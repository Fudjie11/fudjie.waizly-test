definitions:
  helper.JSONResponse:
    properties:
      data: {}
      pagination: {}
      response_status: {}
    type: object
  model.AddEmployeeDto:
    properties:
      department:
        type: string
      job_title:
        type: string
      name:
        type: string
      salary:
        type: number
    type: object
  model.EmployeeDto:
    properties:
      department:
        type: string
      employee_id:
        type: string
      job_title:
        type: string
      joined_date:
        type: string
      name:
        type: string
      salary:
        type: number
    type: object
  model.ListPaging-model_EmployeeDto:
    properties:
      data:
        items:
          $ref: '#/definitions/model.EmployeeDto'
        type: array
      pagination:
        $ref: '#/definitions/model.Pagination'
    type: object
  model.Pagination:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total_rows:
        type: integer
    type: object
  model.PaginationAndSearch:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      search:
        type: string
    type: object
  model.UpdateEmployeeDto:
    properties:
      department:
        type: string
      employee_id:
        type: string
      job_title:
        type: string
      name:
        type: string
      salary:
        type: number
    type: object
  model.WriteResponse:
    properties:
      data_id:
        type: string
      success:
        type: boolean
    type: object
info:
  contact: {}
  description: Fudjie Pangestu Test Waizly Backend.
  title: Fudjie Pangestu Test Waizly Backend
paths:
  /api/main/v1/employee/{employeeId}:
    get:
      consumes:
      - application/json
      description: api for Get Employee  by Id
      parameters:
      - description: Employee Id
        format: uuid
        in: path
        name: employeeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EmployeeDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      security:
      - BasicAuth: []
      - Bearer: []
      summary: Get Employee  By Id
      tags:
      - Employee
  /api/main/v1/employee/{employeeId}/delete:
    delete:
      consumes:
      - application/json
      description: api for delete Employee by Id
      parameters:
      - description: Employee Id
        format: uuid
        in: path
        name: employeeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WriteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      security:
      - BasicAuth: []
      - Bearer: []
      summary: Delete Employee
      tags:
      - Employee
  /api/main/v1/employee/{employeeId}/update:
    put:
      consumes:
      - application/json
      description: api for update tms role by id
      parameters:
      - description: Employee Id
        format: uuid
        in: path
        name: employeeId
        required: true
        type: string
      - description: Update data for tms role
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UpdateEmployeeDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WriteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      security:
      - BasicAuth: []
      - Bearer: []
      summary: Update Employee
      tags:
      - Employee
  /api/main/v1/employee/create:
    post:
      consumes:
      - application/json
      description: api for create tms role
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.AddEmployeeDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WriteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      security:
      - BasicAuth: []
      - Bearer: []
      summary: Create Employee
      tags:
      - Employee
  /api/main/v1/employees:
    post:
      consumes:
      - application/json
      description: api for Get list tms role
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.PaginationAndSearch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ListPaging-model_EmployeeDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      security:
      - BasicAuth: []
      - Bearer: []
      summary: Get List Employee
      tags:
      - Employee
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
